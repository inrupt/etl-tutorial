#
# Save a copy of this file as .env.test.local to prevent your credentials from
# being committed to GitHub (since our `.gitignore` has an entry for
# `.env*.local`).
#

#
# This value should be the Identity Provider (IdP) you used to create a Pod
# for your instance of this ETL Tutorial application (really just to get a
# WebID to uniquely identify *your instance* of this ETL application).
# The value here assumes you have created a Solid Pod on Inrupt's free
# PodSpaces (i.e., using https://start.inrupt.com/):
SOLID_OIDC_ISSUER="https://login.inrupt.com/"

#
# These standard OAuth client credentials are generated by manually
# registering your instance of this ETL Tutorial application with the Identity
# Provider (IdP) that you wish to use to generate access tokens to allow this
# ETL application access to end user Pods (so that it can Load resources into
# those Pods on behalf of those users).
#
#INRUPT_CREDENTIALS_ETL_CLIENT_ID="<Client ID from registering with Solid IdP>"
#INRUPT_CREDENTIALS_ETL_CLIENT_SECRET="<Client Secret from registering with Solid IdP>"


#
# These are the details for a test user that can be specifically registered
# with a Solid Pod - this will be the Pod that our End-2-End tests load into.
#
# The dummy example values provided here assume you have created a Solid Pod
# on Inrupt's free Pod Spaces (https://signup.pod.inrupt.com/) - simply
# replace the '<Sample Test User>' placeholders here with the actual username
# (in **lower-case**) that you used when registering your test user's Pod.
#
#SOLID_WEBID="https://id.inrupt.com/<Sample Test User>"
#SOLID_STORAGE_ROOT="https://storage.inrupt.com/<GUID for Test User>/"

#
# Data sources.
#

#
# Companies House in the UK is a freely available public API allowing anyone
# issue company searches. You just need to register an generate an access
# token via the process described here:
#   https://developer-specs.company-information.service.gov.uk/guides/authorisation
#
#INRUPT_SOURCE_COMPANIES_HOUSE_UK_HTTP_BASIC_TOKEN="<Generated token - see https://developer-specs.company-information.service.gov.uk/guides/authorisation>"


#
# OPTIONAL: If we provide a triplestore update endpoint, our ETL process will
# attempt to write all resources to it.
#
# The example value given here assumes a GraphDB triplestore is running
# locally on the default port that GraphDB uses (i.e., port 7200), and that
# you created a repository in there named 'inrupt-etl-tutorial'.
#
# INRUPT_TRIPLESTORE_ENDPOINT_UPDATE="http://localhost:7200/repositories/inrupt-etl-tutorial/statements"
# INRUPT_TRIPLESTORE_ENDPOINT_QUERY=""
#
# If we provide a triplestore Named Graph, then our ETL tests will attempt to
# write data for the test user into this Named Graph (allowing us have multiple
# user's Pods in a single database instance, and keeping our test data in this
# separate Named Graph).
#
#INRUPT_TRIPLESTORE_NAMED_GRAPH="https://userNamedGraph.com/TestUser-1"
