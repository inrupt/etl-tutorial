#
# Save a copy of this file as .env.test.local to prevent your credentials from
# being committed to GitHub (since our `.gitignore` has an entry for
# `.env*.local`).
#

#
# This value should be the Identity Provider (IdP) you used to create a Pod
# for your instance of this ETL Tutorial application (really just to get a
# WebID to uniquely identify *your instance* of this ETL application).
# The value here assumes you have created a Solid Pod on Inrupt's free
# PodSpaces (i.e., using https://start.inrupt.com/):
SOLID_OIDC_ISSUER="https://login.inrupt.com/"

#
# These standard OAuth 'client credentials' are generated for you when you
# manually register your instance of this ETL Tutorial application with the
# Solid-compatible Identity Provider (IdP) that you used to create a WebID for
# your instance of this ETL Tutorial.
# We need these OAuth 'client credentials' to generate an access token at
# runtime that will allow this instance of the ETL application access to
# end-user Pods (so that it can 'Load' resources into those Pods on behalf of
# those users (but of course, those end-users must also explicitly first have
# granted our ETL Tutorial's instance (i.e., it's WebID) access to their Pod).
#
#INRUPT_CREDENTIALS_ETL_CLIENT_ID="<Client ID from registering our ETL Tutorial's WebID with Solid IdP>"
#INRUPT_CREDENTIALS_ETL_CLIENT_SECRET="<Client Secret from registering our ETL Tutorial's WebID with Solid IdP>"


#
# These are the details for a test user that can be specifically registered
# with a Solid Pod - this will be the Pod that our End-2-End tests load into.
#
# The dummy example values provided here assume you have created a Solid Pod
# on Inrupt's free PodSpaces (https://start.inrupt.com/) - simply replace the
# '<Sample Test Username IN LOWERCASE>' placeholder here with your actual
# test username (in **lower-case**) that you used when registering your test
# user's Pod, and likewise for the Pod storage root placeholder.
#
#SOLID_WEBID="https://id.inrupt.com/<Sample Test Username IN LOWERCASE>"
#SOLID_STORAGE_ROOT="https://storage.inrupt.com/<Generated GUID for Test User>/"

#
# Data sources.
#

#
# Companies House in the UK is a freely available public API allowing anyone
# issue company searches. You just need to register and generate an access
# token via the process described here:
#   https://developer-specs.company-information.service.gov.uk/guides/authorisation
#
# As of March 2023, these are the step-by-step instructions we followed to
# register for a developer account with Companies House. It's all very simple,
# but rather long-winded:
#
# - Browse to this webpage:
#     https://developer-specs.company-information.service.gov.uk/guides/authorisation
# - Click on the 'Your applications' hyperlink on this page, in the second
#   paragraph:
#     "To obtain an API key, go to [Your applications] and register..."
# - You should be taken to a webpage titled: 'Sign in to Companies House'.
#
#  - Click on the 'Register' hyperlink (under the green "Sign in" button).
#  - You should be taken to a webpage titled: "Register with Companies House".
#
# - Enter (and re-enter) your email address (you can use a 'burner' email
#   service if you like, such as 'https://yopmail.com').
# - Check your email inbox, and when you receive the verification email (in
#   our experience, it can take a few minutes (like 10 or more!) to arrive).
# - Click on the the verify link in the email (it should look something like:
#   https://identity.company-information.service.gov.uk/go/register/E07wrwHE6w1MBboTh-WTc0x7PXi5Qztot9QqjFVP6-w).
# - You should be taken to a webpage titled: "Choose a password".
#
# - Enter (and re-enter) your chosen password.
# - You should be taken to a webpage titled: "Companies House API overview"...
#   (and you should see your email address at the top of that page, and a
#   'Sign out' link indicating that you are indeed logged into your account).
#
# - Click on the 'Create an application' menu option on the left-hand side of
#   the page (under 'Manage applications').
# - You should be taken to a webpage titled: "New application".
#
# - Provide an "Application name", for instance 'Inrupt ETL Tutorial'.
# - Provide an "Description of application", for instance:
#  'Testing Inrupt ETL Tutorial...'.
# - Under 'Choose an environment for your application', select the 'Live'
#   radio button.
#  - Click the green 'Create' button (we don't need any other fields, but you
#   can add them too if you like).
# - You should see a confirmation message like:
#   "'Inrupt ETL Tutorial' application has been created."
#
# - Under 'Live applications' you should see a hyperlink with the name of
#   your newly created application - click on that hyperlink.
# - You should be taken to a webpage titled with your application name, such
#   as: "Inrupt ETL Tutorial".
#
# - Under 'Keys for this application', click the green "Create new key"
#   button.
# - You should be taken to a webpage titled: "New API client key".
#
# - Provide a value for 'Key name', such as: "Key for Inrupt ETL Tutorial".
# - Provide a value for 'Key description', such as:
#   "Testing Inrupt ETL Tutorial".
# - Under 'Select the type of API client key you want to create:', select the
#   'REST' radio button.
# - Click the green "Create key" button.
# - You should see a confirmation message like:
#   "'Key for Inrupt ETL Tutorial' key has been created."
#
# - Under 'Keys for this application' you should see a field named 'API key'
#   and to the right a hyperlink named 'Copy', which will copy that API key
#   value to your clipboard.
#
# - See this webpage for how to use our API key:
#     https://developer.company-information.service.gov.uk/authentication
# - All we need to do now is basic HTTP authentication, which means we just
#   need to Base64 encode our API Key concatenated with a single ":"
#   character (this is standard HTTP Basic Auth where the ":" is used to
#   separate a username and the user's password - but since the UK Companies
#   House API doesn't require or use passwords, we don't need to provide any
#   password value at all, but we still the separator character).
#    We can use the website https://www.base64encode.org/ to encode our API
#   key value - simply paste in your API key value and append a single ":" at
#   the end, and click the green "> ENCODE <" button.
#- Finally(!), paste the encoded value, which should look something like this:
#    XzdhZGUzZWEtMmRkMy10YWJhLWIyZGWtMDYzMDhhZGEwqWBhOg==
#  ...into the following environment variable:
#
#INRUPT_SOURCE_COMPANIES_HOUSE_UK_HTTP_BASIC_TOKEN="<Generated token - see https://developer-specs.company-information.service.gov.uk/guides/authorisation>"


#
# OPTIONAL: If we provide a triplestore update endpoint, our ETL process will
# attempt to write all resources to it.
#
# The example value given here assumes a GraphDB triplestore is running
# locally on the default port that GraphDB uses (i.e., port 7200), and that
# you created a repository in there named 'inrupt-etl-tutorial'.
#
# INRUPT_TRIPLESTORE_ENDPOINT_UPDATE="http://localhost:7200/repositories/inrupt-etl-tutorial/statements"
# INRUPT_TRIPLESTORE_ENDPOINT_QUERY=""
#
# If we provide a triplestore Named Graph, then our ETL tests will attempt to
# write data for the test user into this Named Graph (allowing us have multiple
# user's Pods in a single database instance, and keeping our test data in this
# separate Named Graph).
#
#INRUPT_TRIPLESTORE_NAMED_GRAPH="https://userNamedGraph.com/TestUser-1"
