# Save a copy of this file as .env.test.local to prevent your credentials from
# being committed.
#
# These credentials determine which Pod the end-to-end tests will write data to.
# Generally, the tests should clean up after themselves, but it is advisable to
# use a Pod created specifically for running these end-to-end tests.
#
# Note: The Pod resource specified below should be a private resource, so that
# our tests can check for authenticated access to that resource. For instance,
# the root resource of any Pod will generally be a private resource, so it
# makes a good candidate here.
#
# Note: The username present in the Pod resource URL should match the username
# of the account used to generate the credentials - but just note that the
# Inrupt Enterprise Solid Server (ESS) (or more precisely the ESS IdP Broker)
# lower-cases the user's provided username when constructing their WebID, and
# therefore all resources in that user's Pod, including their private root
# resource, will contain that *lowercased* username in their URLs.
#

#
# OPTIONAL: If we provide a triplestore update endpoint, our ETL process will
# attempt to write all resources to it.
#
# The example value given here assumes a GraphDB triplestore is running
# locally on the default port that GraphDB uses (i.e., port 7200), and that
# you created a repository in there named 'inrupt-etl-tutorial'.
#
# INRUPT_TRIPLESTORE_ENDPOINT_UPDATE="http://localhost:7200/repositories/inrupt-etl-tutorial/statements"
# INRUPT_TRIPLESTORE_ENDPOINT_QUERY=""
#
# If we provide a triplestore Named Graph, then our ETL tests will attempt to
# write data for the test user into this Named Graph (allowing us have multiple
# user's Pods in a single database instance, and keeping our test data in this
# separate Named Graph).
#
INRUPT_TRIPLESTORE_NAMED_GRAPH="https://userNamedGraph.com/TestUser-1"

#
# These are the details for a test user that can be specifically registered
# with a Solid Pod - this will be the Pod our tests load into.
#
# The dummy example values provided here assume you have created a Solid Pod
# on Inrupt's free Pod Spaces (https://signup.pod.inrupt.com/) - simply
# replace the '<Sample Test User>' placeholders here with the actual username
# you when registering your Pod.
#
SOLID_WEBID="https://pod.inrupt.com/<Sample Test User>/profile/card#me"
SOLID_STORAGE_ROOT="https://pod.inrupt.com/<Sample Test User>/"
SOLID_OIDC_ISSUER="https://broker.pod.inrupt.com/"

#
# These client credentials are generated by manually registered your instance
# of this ETL Tutorial application with the Identity Provider (IdP) that you
# wish to use to generate access tokens to allow this application access to
# user's Pod (so that it can load resources into those Pods).
#
INRUPT_CREDENTIALS_ETL_CLIENT_ID="<Client ID from registering with Solid IdP>"
INRUPT_CREDENTIALS_ETL_CLIENT_SECRET="<Client Secret from registering with Solid IdP>"

#
# Data sources.
#

#
# Companies House in the UK is a freely available public API allowing anyone
# issue company searches. You just need to register an generate an access
# token via the process described here:
#   https://developer-specs.company-information.service.gov.uk/guides/authorisation
#
INRUPT_SOURCE_COMPANIES_HOUSE_UK_HTTP_BASIC_TOKEN="<Generated token - see https://developer-specs.company-information.service.gov.uk/guides/authorisation>"
