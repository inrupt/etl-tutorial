name: CI

on: [push]

env:
  CI: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners

        # Comment out MacOS, as it's very slow at the moment, and not really
        # critical.
        # os: [ubuntu-20.04, windows-2019, macos-10.15]
        os: [ubuntu-20.04, windows-2019]
        node-version: [16.x, 14.x]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v2.1.5
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      # We generate our vocab bundle from all the vocabs at runtime,
      # since normally vocab bundles are expected to be published somewhere,
      # but in our case, we want to keep everything together for now.
    - run: npx @inrupt/artifact-generator generate --vocabListFile "resources/Vocab/vocab-etl-tutorial-bundle-all.yml" --outputDirectory "./src/InruptTooling/Vocab/EtlTutorial" --noPrompt --publish npmInstallAndBuild

    - run: npm ci
    - run: npm run build
    - run: npm run lint
    - run: npm run check-licenses
    - run: npm audit --audit-level=moderate
    - run: npm test
    - run: npx package-check
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2.2.3
      continue-on-error: true
      with:
        name: code-coverage-report
        path: coverage
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2.2.3
      continue-on-error: true
      with:
        name: dist
        path: dist
