prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix vann: <http://purl.org/vocab/vann/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix cc: <http://creativecommons.org/ns#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>

prefix solid: <http://www.w3.org/ns/solid/terms#>

prefix inrupt_gen: <https://inrupt.com/vocab/tool/artifact_generator#>
prefix inrupt_common: <https://inrupt.com/vocab/common#>

#
# The subject of the triples here can be a blank node, as we expect this resource to be read and
# written to a specific URL within a Pod (and that URL will determine the subject).
#
# Note: If a user does not have an account with any of these data sources, the credential triples
# can be removed, or simply left as empty strings.
#
<http://example.com/nodeToConnectCredentialsToAppDataDescription>
    a inrupt_common:DataHierarchyFirst ;
    rdfs:label "First ETL instance"@en ;
    rdfs:comment "ETL instance 1 (e.g., if we were ETL'ing Home Data, this instance could be our primary dwelling, with other instances for our vacation home and multiple rental properties we also own)."@en .

[]
    a inrupt_common:CredentialResource ;
    inrupt_common:dataHierarchyFirst <http://example.com/nodeToConnectCredentialsToAppDataDescription> ;

    # The Solid Pod to load data into (should be a string, and not an IRI!).
    solid:webId "https://test.example.com/test-user/webid" ;
    solid:storageRoot "https://test-user.different.example.com/" .
