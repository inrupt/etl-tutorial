prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix vann: <http://purl.org/vocab/vann/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix cc: <http://creativecommons.org/ns#>
prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>

prefix solid: <http://www.w3.org/ns/solid/terms#>

prefix inrupt_gen: <https://inrupt.com/vocab/tool/artifact_generator#>
prefix inrupt_common: <https://inrupt.com/vocab/common#>

prefix inrupt_3rd_party_companies_house_uk: <https://inrupt.com/vocab/3rdparty/companies-house-uk#>

#
# This example resource lists all the credentials required to extract user information from various
# 3rd-party data sources.
#
# The subject of the triples here can be a blank node, as we expect this resource to be read and
# written to a specific URL within a Pod (and that URL will determine the subject).
#
# Note: If a user does not have an account with any of these data sources, the credential triples
# can be removed, or simply left as empty strings.
#
[]
    rdf:type inrupt_common:CredentialResource ;

    #
    # Optional triplestore SPARQL Update endpoint.
    # E.g., http://localhost:7200/repositories/my-app/statements
    #
    inrupt_common:triplestoreEndpointUpdate "" ;
    #
    # Optional triplestore Named Graph to represent this user's Pod (which
    # allows us populate many Pods within a single database instance).
    # E.g., http://example.com/namedGraph/pod/user-1
    #
    inrupt_common:triplestoreNamedGraph <> ;

    # As a convenience, we can ask our ETL process to also write this resource directly to the
    # user's Pod (if this value is configured to 'true').
    inrupt_common:etlPushCredentialResourceToPod "true"^^xsd:boolean ;

    # The Solid Pod to load data into (should be a string, and not an IRI!).
    solid:webId "" ;
    # This value is a string, and not an IRI, as we expect to rely on Solid's
    # slash semantics for containment of resources, and so we'll use string
    # manipulation based on this value.
    solid:storageRoot "" ;

    #
    # Data source credentials (with each source potentially having very
    # different credential fields or approaches to Authentication).
    #
    inrupt_3rd_party_companies_house_uk:authenticationHttpBasicToken "M2Ix...SOME ENCODED TOKEN...MTI0Og==" .
